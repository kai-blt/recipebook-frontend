[{"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\index.js":"1","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\App.js":"2","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\reportWebVitals.js":"3","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\Home.js":"4","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\Login.js":"5","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\Nav.js":"6","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\axios\\axiosWithAuth.js":"7","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\validation\\schema.js":"8","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\routes\\ProtectedRoute.js":"9","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\index.js":"10","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\IngredientList.js":"11","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\RecipeCard.js":"12","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\AddRecipeForm.js":"13","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\RecipeView.js":"14","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\RecipeThumbnail.js":"15","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\styles\\globalStyles.js":"16","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\state\\index.js":"17","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\state\\ducks\\index.js":"18","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\state\\ducks\\userDuck.js":"19","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\state\\ducks\\recipeDuck.js":"20","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\utils\\useFormHelpers.js":"21","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\RecipeThumbnailGrid.js":"22"},{"size":750,"mtime":1615326928459,"results":"23","hashOfConfig":"24"},{"size":814,"mtime":1615346201314,"results":"25","hashOfConfig":"24"},{"size":348,"mtime":1615326928459,"results":"26","hashOfConfig":"24"},{"size":290,"mtime":1615327305241,"results":"27","hashOfConfig":"24"},{"size":3209,"mtime":1615327814463,"results":"28","hashOfConfig":"24"},{"size":928,"mtime":1615327805497,"results":"29","hashOfConfig":"24"},{"size":296,"mtime":1615326928460,"results":"30","hashOfConfig":"24"},{"size":605,"mtime":1615326928459,"results":"31","hashOfConfig":"24"},{"size":345,"mtime":1615326928459,"results":"32","hashOfConfig":"24"},{"size":232,"mtime":1615307474228,"results":"33","hashOfConfig":"24"},{"size":859,"mtime":1615339243043,"results":"34","hashOfConfig":"24"},{"size":10914,"mtime":1615390752890,"results":"35","hashOfConfig":"24"},{"size":7775,"mtime":1615347943482,"results":"36","hashOfConfig":"24"},{"size":12608,"mtime":1615395318584,"results":"37","hashOfConfig":"24"},{"size":1296,"mtime":1615327475318,"results":"38","hashOfConfig":"24"},{"size":5006,"mtime":1615346337006,"results":"39","hashOfConfig":"24"},{"size":588,"mtime":1615330362501,"results":"40","hashOfConfig":"24"},{"size":140,"mtime":1615330356667,"results":"41","hashOfConfig":"24"},{"size":4588,"mtime":1615329311968,"results":"42","hashOfConfig":"24"},{"size":5005,"mtime":1615338106427,"results":"43","hashOfConfig":"24"},{"size":3709,"mtime":1615390278171,"results":"44","hashOfConfig":"24"},{"size":1334,"mtime":1615394717113,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1fzh7t8",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\index.js",[],["92","93"],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\App.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\reportWebVitals.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\Home.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\Login.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\Nav.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\axios\\axiosWithAuth.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\validation\\schema.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\routes\\ProtectedRoute.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\index.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\IngredientList.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\RecipeCard.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\AddRecipeForm.js",["94"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { recipeActions } from '../../state/ducks';\r\nimport { useFormHelpers } from '../utils/useFormHelpers';\r\n\r\nimport schema from '../../validation/schema';\r\nimport styled from 'styled-components';\r\n\r\nconst AddRecipeForm = (props) => {\r\n  const { setIsCreating, setClicked } = props;\r\n  const [enableSubmit, setEnableSubmit] = useState(true);\r\n\r\n  //Form Helper Utils\r\n  const { \r\n    initialFormValues,\r\n    errors,\r\n    formValues,\r\n    setFormValues,\r\n    addIngredient,\r\n    delIngredient,\r\n    addStep,\r\n    delStep,\r\n    handleChange\r\n  } = useFormHelpers();\r\n\r\n  //Redux State Managers\r\n  const dispatch = useDispatch();\r\n  const { status } = useSelector(state => state.recipes);\r\n  \r\n  useEffect(() => {\r\n    schema.isValid(formValues)\r\n      .then(valid => {\r\n        setEnableSubmit(!valid);\r\n      });\r\n  }, [formValues]); \r\n\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();   \r\n\r\n    //Create new recipe object\r\n    const { name, type, imageURL, ingredients, steps } = formValues;\r\n    const newRecipe = {\r\n      name,\r\n      type,\r\n      user: {\r\n          username: localStorage.getItem(\"username\")\r\n        },\r\n      imageURL,\r\n      ingredients,\r\n      steps\r\n    };\r\n\r\n    //Dispatch action to add recipe\r\n    dispatch(recipeActions.addRecipe(newRecipe));   \r\n    \r\n    //Reinitialize form state\r\n    setFormValues(initialFormValues);\r\n    setClicked(name);\r\n    setIsCreating(e);\r\n  \r\n    // Scroll to top for Safari\r\n    document.body.scrollTop = 0;\r\n    // Scroll to top for Chrome, Firefox, IE, Opera\r\n    document.documentElement.scrollTop = 0;\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <FormContainer>\r\n      <RecipeTitle>\r\n        <div>\r\n          <h2>{formValues.name || <br/>}</h2>\r\n          <h4>{formValues.type || <br/>}</h4>          \r\n        </div>\r\n        <button className=\"cancelBtn\" onClick={setIsCreating}>Cancel</button>\r\n      </RecipeTitle>\r\n\r\n      {/* Recipe Title/Image Form Fields */}\r\n      <InfoBox>\r\n        <EditInfoBox>\r\n          <div className=\"title\">\r\n          <label>Title\r\n            <input \r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={formValues.name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>  \r\n          </div>\r\n          <div className=\"type\">\r\n          <label>Type\r\n            <input \r\n              type=\"text\"\r\n              name=\"type\"\r\n              value={formValues.type}\r\n              onChange={handleChange}\r\n            />\r\n          </label>  \r\n          </div>\r\n        </EditInfoBox>             \r\n        <label>Image URL\r\n          <input \r\n            type=\"text\"\r\n            name=\"imageURL\"\r\n            value={formValues.imageURL}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <ErrorMessages>\r\n          <div>{errors.name}</div>\r\n          <div>{errors.type}</div>\r\n          <div>{errors.imageURL}</div>\r\n        </ErrorMessages>\r\n      </InfoBox>\r\n\r\n      {/* Ingredient Form Fields */}\r\n      <InfoBox>\r\n        <h3>Ingredients</h3>\r\n        {formValues.ingredients.map((ing, index) => (\r\n          <IngredientFields>\r\n            <div className=\"qty\">\r\n              <label>Qty\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"quantity\"\r\n                  value={formValues.ingredients[index].quantity}\r\n                  onChange={e => handleChange(e, index)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"msr\">\r\n              <label>Measure\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"measurement\"\r\n                  value={formValues.ingredients[index].measurement}\r\n                  onChange={e => handleChange(e, index)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"ing\"> \r\n              <label>Ingredient\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"ingredientname\"\r\n                  value={formValues.ingredients[index].name}\r\n                  onChange={e => handleChange(e, index)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"grp\">\r\n              <label>Group\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"group\"\r\n                  value={formValues.ingredients[index].group}\r\n                  onChange={e => handleChange(e, index)}\r\n                />\r\n              </label>\r\n            </div> \r\n            <ButtonContainer>\r\n              {formValues.ingredients.length === 1\r\n              ?\r\n                <div></div>\r\n              :\r\n                <div>\r\n                  <button className=\"deleteBtn2\" onClick={e => delIngredient(e, index)}>-</button>\r\n                </div>\r\n              }\r\n              <div>\r\n                <button className=\"addBtn\" onClick={e => addIngredient(e, index)}>+</button>\r\n              </div>\r\n            </ButtonContainer>\r\n          </IngredientFields>\r\n        ))}\r\n        <ErrorMessages>\r\n          {errors.quantity}\r\n          {errors.measurement}\r\n          {errors.ingredientname}\r\n          {errors.group}\r\n        </ErrorMessages>\r\n      </InfoBox>\r\n\r\n      {/* Step Form Fields */}\r\n      <InfoBox>\r\n        <h3>Steps</h3>\r\n        {formValues.steps.map((stp, index) => (\r\n          <IngredientFields>\r\n            <div className=\"step\">\r\n              <label>Step {formValues.steps[index].stepnumber}\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"instructions\"\r\n                  value={formValues.steps[index].instructions}\r\n                  onChange={e => handleChange(e, index)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <ButtonContainer>\r\n              {formValues.steps.length === 1\r\n              ?\r\n                <div></div>\r\n              :\r\n                <div>\r\n                  <button className=\"deleteBtn2\" onClick={e => delStep(e, index)}>-</button>\r\n                </div>\r\n              }\r\n              <div>\r\n                <button className=\"addBtn\" onClick={e => addStep(e, index)}>+</button>\r\n              </div>\r\n            </ButtonContainer>\r\n          </IngredientFields>\r\n        ))}\r\n      </InfoBox>   \r\n      <ErrorMessages>\r\n        {errors.instructions}\r\n      </ErrorMessages>\r\n      {enableSubmit ? <button className=\"disabled\">Submit</button> :  <button className=\"addBtn\" onClick={e => handleSubmit(e)}>Submit</button>}\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\n//Component Styles\r\nconst FormContainer = styled.div`\r\n  margin-bottom: 4%;\r\n`;\r\n\r\nconst RecipeTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  flex-flow: column wrap;\r\n  .edit {\r\n    width: 100%;\r\n  }\r\n\r\n  h2 {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  h4 {\r\n    font-weight: 500;\r\n  }\r\n\r\n  @media (max-width: 1200px) {\r\n    .edit {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InfoBox = styled.div`\r\n  margin: 10% 0;\r\n`;\r\n\r\n\r\nconst EditInfoBox = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-between;\r\n  .title {\r\n    width: 65%;\r\n  }\r\n\r\n  .type {\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nconst IngredientFields = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-flow: column wrap;\r\n  align-items: center;\r\n  padding-bottom: 15%;\r\n\r\n  div {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n   display: flex;\r\n   justify-content: space-between;\r\n   flex-flow: row nowrap;\r\n   margin-top: 2%;\r\n\r\n   div {\r\n     width: 20%;\r\n   }\r\n`;\r\n\r\nconst ErrorMessages = styled.div`\r\n  color: #d9534f;\r\n`;\r\n\r\nexport default AddRecipeForm;\r\n\r\n","C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\RecipeView.js",["95","96"],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\RecipeThumbnail.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\styles\\globalStyles.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\state\\index.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\state\\ducks\\index.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\state\\ducks\\userDuck.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\state\\ducks\\recipeDuck.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\utils\\useFormHelpers.js",[],"C:\\_LambdaSchool\\_recipebookproject\\recipebook-frontend\\src\\components\\recipe\\RecipeThumbnailGrid.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":28,"column":11,"nodeType":"103","messageId":"104","endLine":28,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":22,"column":10,"nodeType":"103","messageId":"104","endLine":22,"endColumn":24},{"ruleId":"101","severity":1,"message":"106","line":22,"column":26,"nodeType":"103","messageId":"104","endLine":22,"endColumn":43},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'status' is assigned a value but never used.","Identifier","unusedVar","'recipeExpanded' is assigned a value but never used.","'setRecipeExpanded' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]